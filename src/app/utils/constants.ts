import { Tetrominoes } from "./types";

// 盤面の行列数
export const ROWS = 20;
export const COLS = 10;
// テトロミノの種類
export const TYPES = ["I", "O", "T", "L", "J", "S", "Z"] as const;

export const TETROMINOES: Tetrominoes = {
    "I": {type: "I", shape: [
    [0, 0, 0, 0],
    [1, 1, 1, 1],
    [0, 0, 0, 0],
    [0, 0, 0, 0],
    ]}, 
    "O": {type: "O", shape: [
    [1, 1], 
    [1, 1],
    ]},
    "T": {type: "T", shape: [
    [0, 1, 0], 
    [1, 1, 1],
    [0, 0, 0]
    ]},
    "L": {type: "L", shape: [
    [0, 0, 1], 
    [1, 1, 1], 
    [0, 0, 0],
    ]},
    "J": {type: "J", shape: [
    [1, 0, 0], 
    [1, 1, 1], 
    [0, 0, 0],
    ]},
    "S": {type: "S", shape: [
    [0, 0, 0],
    [0, 1, 1],
    [1, 1, 0],
    ]},
    "Z": {type: "Z", shape: [
    [0, 0, 0],
    [1, 1, 0],
    [0, 1, 1],
    ]}
} as const;

// SRSで用いる。先頭から順に参照して回転可能か判定する。
export const WALLKICKDATA: {[key: string]: number[][]} = {
    // 0123は順に反時計回りで0度から順に回転した状態。
    // L3は現在状態3で左回転したいということ。
    "L0": [
        [0, 0], [1, 0], [1, 1], [0, -2], [1, -2]
    ], 
    "L1": [
        [0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]
    ], 
    "L2": [
        [0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]
    ], 
    "L3": [
        [0, 0], [1, 0], [1, -1], [0, 2], [1, 2]
    ], 
    // R3は現在状態3で右回転したいということ。
    "R0": [
        [0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]
    ], 
    "R1": [
        [0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]
    ], 
    "R2": [
        [0, 0], [1, 0], [1, 1], [0, -2], [1, -2]
    ], 
    "R3": [
        [0, 0], [1, 0], [1, -1], [0, 2], [1, 2]
    ], 
    // Iミノだけ別の法則でずらしていく
    // IL3は現在状態3で左回転したいということ。
    "IL0": [
    [0, 0], [-1, 0], [2, 0], [-1, 2], [2, -1]
    ], 
    "IL1": [
    [0, 0], [1, 0], [-2, 0], [-2, -1], [1, 2]
    ], 
    "IL2": [
    [0, 0], [1, 0], [-2, 0], [1, -2], [-2, 1]
    ], 
    "IL3": [
    [0, 0], [2, 0], [-1, 0], [2, 1], [-1, -2]
    ], 
    "IR0": [
    [0, 0], [-2, 0], [1, 0], [-2, -1], [1, 2]
    ], 
    // IR3は現在状態3で左回転したいということ。
    "IR1": [
    [0, 0], [-1, 0], [2, 0], [-1, 2], [2, -1]
    ], 
    "IR2": [
    [0, 0], [2, 0], [-1, 0], [2, 1], [-1, -2]
    ], 
    "IR3": [
    [0, 0], [-2, 0], [1, 0], [1, -2], [-2, 1]
    ], 
} as const;